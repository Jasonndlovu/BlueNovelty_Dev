import{a as E,f as D,h as g,j as q,k as a,o as R,t as m,w as p}from"./chunk-L2HEO6U7.js";import{F as y}from"./chunk-JYJCGWMW.js";import{B as l,E as h,n as v}from"./chunk-KV6L2PIJ.js";import{a as d,b as f,g as u}from"./chunk-OLRFWS6T.js";var U=(()=>{let o=class o{constructor(r,e){this.firestore=r,this.auth=e}addReview(r,e,n,t){return u(this,null,function*(){if(!r)throw new Error("Service ID is required");if(!(e!=null&&e.trim()))throw new Error("Review message cannot be empty");if(n<1||n>5)throw new Error("Stars must be between 1 and 5");if(!t)throw new Error("Recipient ID is required");let i=this.auth.currentUser;if(!i)throw new Error("User not logged in");let c={userId:i.uid,userName:i.displayName||"Anonymous",recipient:t,serviceId:r,message:e.trim(),stars:n,createdAt:E.now()},A=a(this.firestore,"reviews");try{let s=yield q(A,c);return console.log("Review successfully added with ID:",s.id),s.id}catch(s){throw console.error("Error adding review:",s),new Error(`Failed to add review: ${s instanceof Error?s.message:String(s)}`)}})}getServiceReviews(r){if(!r)throw new Error("Service ID is required");let e=a(this.firestore,"reviews"),n=m(e,p("serviceId","==",r));return g(n,{idField:"id"}).pipe(v(t=>t.map(i=>f(d({},i),{createdAt:this.convertTimestamp(i.createdAt)}))))}getUserReviews(r){return u(this,null,function*(){if(!r)throw new Error("User ID is required");let e=a(this.firestore,"reviews"),n=m(e,p("recipient","==",r));try{return(yield R(n)).docs.map(i=>{let c=i.data();return f(d({id:i.id},c),{createdAt:this.convertTimestamp(c.createdAt)})})}catch(t){throw console.error("Error fetching user reviews:",t),new Error(`Failed to get user reviews: ${t instanceof Error?t.message:String(t)}`)}})}convertTimestamp(r){return r?r instanceof Date?r:r.toDate():new Date}};o.\u0275fac=function(e){return new(e||o)(h(D),h(y))},o.\u0275prov=l({token:o,factory:o.\u0275fac,providedIn:"root"});let w=o;return w})();export{U as a};
