import{a as h,b as u,d as y,e as v,f as w,j as T,k as A}from"./chunk-L2HEO6U7.js";import{F as g}from"./chunk-JYJCGWMW.js";import{B as p,E as l}from"./chunk-KV6L2PIJ.js";import{g as s}from"./chunk-OLRFWS6T.js";var F=(()=>{let o=class o{constructor(e,t){this.firestore=e,this.auth=t}createServiceRequest(e){return s(this,null,function*(){let t=this.auth.currentUser;if(!t)throw new Error("User not logged in");let n=Array.isArray(e.selectedTimeAndDate)?e.selectedTimeAndDate.map(r=>new Date(r).toISOString()):new Date(e.selectedTimeAndDate).toISOString(),d={userId:t.uid,selectedProperty:e.selectedProperty,selectedExtras:e.selectedExtras,selectedTimeAndDate:n,isAvailable:!0,cleanerID:"null",serviceType:e.serviceType,additionalInfo:e.additionalInfo,selectedExtrasPrice:e.selectedExtrasPrice,totalCostToUser:e.totalCostToUser,adminFee:e.adminFee,bookingType:e.bookingType,recurringOption:e.recurringOption,recurringDay:e.recurringDay,recurringDate:e.recurringDate,userConfirmed:!1,cleanerConfirmed:!1,serviceStatus:"Posted",createdAt:h.now()},i=A(this.firestore,"service-requests");try{let r=yield T(i,d);return console.log("Service request successfully added with ID:",r.id),r.id}catch(r){throw console.error("Error adding service request:",r),new Error("Error adding service request: "+r)}})}waitForCleanerAssignment(e){return s(this,null,function*(){return console.log(e),new Promise((t,n)=>{let d=u(this.firestore,"service-requests",e),i=v(d,r=>s(this,null,function*(){if(!r.exists())return i(),n("Service request not found");let c=r.data().cleanerID;if(c&&c!=="null"&&c.trim()!==""){i();try{let f=u(this.firestore,"users",c),m=yield y(f);return m.exists()?t(m.data()):n("Cleaner not found")}catch(f){return n("Error fetching cleaner info: "+f)}}}),r=>{n("Error watching service request: "+r)})})})}};o.\u0275fac=function(t){return new(t||o)(l(w),l(g))},o.\u0275prov=p({token:o,factory:o.\u0275fac,providedIn:"root"});let a=o;return a})();export{F as a};
