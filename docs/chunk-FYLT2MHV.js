import{f as B,h as b,k as v,m as s,n as c,q as D,t as w,v as i,w as y}from"./chunk-L2HEO6U7.js";import{F as J}from"./chunk-JYJCGWMW.js";import{B as j,E as h,j as q,n as l}from"./chunk-KV6L2PIJ.js";import{a as d,b as p,g as m}from"./chunk-OLRFWS6T.js";var I=(()=>{let a=class a{constructor(e,t){this.firestore=e,this.auth=t}getServiceReviews(){let e=v(this.firestore,"service-requests"),t=w(e,y("isAvailable","==",!0));return b(t,{idField:"id"}).pipe(l(r=>r.map(o=>{var n;return p(d({},o),{createdAt:((n=o.createdAt)==null?void 0:n.toDate())||new Date})})))}getUserName(e){let t=s(this.firestore,"users",e);return q(c(t)).pipe(l(r=>{if(r.exists()){let o=r.data();return(o==null?void 0:o.displayName)||"Unknown"}else return"Unknown"}))}updateJobStatus(e,t){let r=s(this.firestore,"service-requests",e);return i(r,{isAvailable:!1,cleanerID:t.uid,serviceStatus:"Accepted"})}cancelJob(e,t){let r=s(this.firestore,"service-requests",e);return i(r,{serviceStatus:"Canceled",cancellationReason:t})}markJobCompletedByUser(e){let t=s(this.firestore,"service-requests",e);return i(t,{completedByUser:!0})}markJobCompletedByCleaner(e){let t=s(this.firestore,"service-requests",e);return i(t,{completedByCleaner:!0})}updateJobConfirmation(e,t,r){return m(this,null,function*(){let o=s(this.firestore,"service-requests",e);if(!(yield c(o)).exists())throw console.error(`\u274C Job with ID ${e} not found.`),new Error(`Job with ID ${e} does not exist.`);yield i(o,{[t]:r}),console.log(`\u2705 Job ${e} updated: ${t} set to ${r}`)})}getJobById(e){let t=s(this.firestore,"service-requests",e);return c(t).then(r=>r.data())}markJobAsFinalized(e){let t=s(this.firestore,"service-requests",e);return i(t,{serviceStatus:"finalized"})}finalizeJobIfBothCompleted(e){return m(this,null,function*(){let t=s(this.firestore,"service-requests",e),r=yield c(t);if(!r.exists())throw new Error("Job not found");let o=r.data(),{completedByUser:n,completedByCleaner:f,totalCostToUser:C,cleanerID:S}=o;if(n&&f){let R=C*.9;yield i(t,{serviceStatus:"Completed"});let g=s(this.firestore,"cleaners",S);yield i(g,{accountBalance:D(R)}),console.log(`\u2705 Job ${e} marked completed. R${R.toFixed(2)} added to cleaner's balance.`)}else console.log("\u26A0\uFE0F Both parties have not confirmed completion yet.")})}getServiceHistoryByStatus(e){let t=v(this.firestore,"service-requests"),r=w(t,y("serviceStatus","==",e));return b(r,{idField:"id"}).pipe(l(o=>o.map(n=>{var f;return p(d({},n),{createdAt:((f=n.createdAt)==null?void 0:f.toDate())||new Date})})))}};a.\u0275fac=function(t){return new(t||a)(h(B),h(J))},a.\u0275prov=j({token:a,factory:a.\u0275fac,providedIn:"root"});let u=a;return u})();export{I as a};
